{"remainingRequest":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/src/views/trace/retailer/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/src/views/trace/retailer/index.vue","mtime":1645620179157},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/babel-loader/lib/index.js","mtime":1645761092000},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/cache-loader/dist/cjs.js","mtime":1645761092000},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/vue-loader/lib/index.js","mtime":1645761092000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}