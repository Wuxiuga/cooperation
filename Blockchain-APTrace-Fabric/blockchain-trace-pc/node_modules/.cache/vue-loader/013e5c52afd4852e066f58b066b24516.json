{"remainingRequest":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/src/views/trace/farmer/index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/src/views/trace/farmer/index.vue","mtime":1650505733000},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/css-loader/dist/cjs.js","mtime":1645761092000},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1645761093000},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/postcss-loader/src/index.js","mtime":1645761092000},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/cache-loader/dist/cjs.js","mtime":1645761092000},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/vue-loader/lib/index.js","mtime":1645761092000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hdmF0YXItdXBsb2FkZXIgLmVsLXVwbG9hZCB7CiAgYm9yZGVyOiAxcHggZGFzaGVkICNkOWQ5ZDk7CiAgYm9yZGVyLXJhZGl1czogNnB4OwogIGN1cnNvcjogcG9pbnRlcjsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQouYXZhdGFyLXVwbG9hZGVyIC5lbC11cGxvYWQ6aG92ZXIgewogIGJvcmRlci1jb2xvcjogIzQwOWVmZjsKfQouYXZhdGFyLXVwbG9hZGVyLWljb24gewogIGZvbnQtc2l6ZTogMjhweDsKICBjb2xvcjogIzhjOTM5ZDsKICB3aWR0aDogMTc4cHg7CiAgaGVpZ2h0OiAxNzhweDsKICBsaW5lLWhlaWdodDogMTc4cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Ci5hdmF0YXIgewogIHdpZHRoOiAxNzhweDsKICBoZWlnaHQ6IDE3OHB4OwogIGRpc3BsYXk6IGJsb2NrOwp9CgouaW1hZ2UgewogIHdpZHRoOiA4MCU7CiAgZGlzcGxheTogYmxvY2s7Cn0KLyoq5LiA5a6a6KaB57uZ5a696auY77yM5ZCm5YiZ5LiN5pi+56S6Ki8KI3Bvc2l0aW9uIHsKICBoZWlnaHQ6IDEwMCU7Cn0KLyoq5L+u5pS554K55qCH6K6w5Zu+54mH55qEY3NzLCDlm77niYfnu5nlrr3pq5jvvIzlkKbliJnkuI3mmL7npLogKi8KLm1hcC1wYWdlIC9kZWVwLyB7Ci5hbWFwLWljb24gewogIHdpZHRoOiAyMHB4Owp9Ci5hbWFwLW1hcmtlci1sYWJlbCB7CiAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsKICBmb250LXNpemU6IDE2cHg7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHBhZGRpbmc6IDVweDsKfQp9CgojcGFuZWwgewogIHBvc2l0aW9uOiBmaXhlZDsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICBtYXgtaGVpZ2h0OiA5MCU7CiAgb3ZlcmZsb3cteTogYXV0bzsKICB0b3A6IDEwcHg7CiAgcmlnaHQ6IDEwcHg7CiAgd2lkdGg6IDI4MHB4Owp9CiNwYW5lbCAuYW1hcC1jYWxsIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA5Y2Y5OwogIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDRweDsKICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4Owp9CiNwYW5lbCAuYW1hcC1saWItZHJpdmluZyB7CiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNHB4OwogIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA0cHg7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQpodG1sLApib2R5LAojY29udGFpbmVyIHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7Cn0KCi5tYXAgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogNTAwcHg7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappingsy0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/trace/farmer","sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\"><el-button type=\"primary\" icon=\"el-icon-plus\" size=\"mini\" @click=\"handleAdd\">需求发布</el-button></el-col>\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n    </el-row>\n\n    <el-table v-loading=\"loading\" :data=\"cropsList\" @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column label=\"需求编号\" prop=\"cropsId\" />\n      <el-table-column label=\"资源名称\" prop=\"cropsName\" />\n      <el-table-column label=\"状态\" prop=\"status\">\n        <template slot-scope=\"scope\">\n          <el-tag v-if=\"scope.row.status === 0\">待上报</el-tag>\n          <el-tag type=\"danger\" v-if=\"scope.row.status === 1\">已上报</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n<!--          <el-button v-show=\"scope.row.status === 0\" size=\"mini\" type=\"text\" @click=\"handleRecord(scope.row)\">周期记录</el-button>-->\n          <el-button size=\"mini\" type=\"text\" @click=\"cropsDetail(scope.row)\">需求详情</el-button>\n<!--          <el-button size=\"mini\" type=\"text\" @click=\"cropsProcessDetail(scope.row)\">过程详情</el-button>-->\n          <el-button v-show=\"scope.row.status === 0\" size=\"mini\" type=\"text\" @click=\"noticeTrasport(scope.row)\">需求上报</el-button>\n<!--          <el-button size=\"mini\" type=\"text\" @click=\"logisticsTrace(scope.row)\">物流追踪</el-button>-->\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total > 0\" :total=\"total\" :page.sync=\"queryParams.pageNum\" :limit.sync=\"queryParams.pageSize\" @pagination=\"getList\" />\n\n    <!-- 记录作物生长 -->\n<!--    <el-dialog center title=\"记录作物生长情况\" :visible.sync=\"growDialog\" width=\"700px\" append-to-body>-->\n<!--      <el-form ref=\"form\" label-width=\"80px\" :model=\"recordForm\">-->\n<!--        <el-row>-->\n<!--          <el-col :span=\"24\" align=\"center\">{{ cropsName }}</el-col>-->\n<!--        </el-row>-->\n<!--        <el-divider></el-divider>-->\n<!--        <el-row>-->\n<!--          <el-col :span=\"12\">-->\n<!--            <el-form-item label=\"温度\" prop=\"nickName\"><el-input v-model=\"recordForm.temperature\" placeholder=\"请输入温度\" /></el-form-item>-->\n<!--          </el-col>-->\n<!--          <el-col :span=\"12\">-->\n<!--            <el-form-item label=\"生长情况\" prop=\"nickName\"><el-input v-model=\"recordForm.growStatus\" placeholder=\"请输入生长情况\" /></el-form-item>-->\n<!--          </el-col>-->\n<!--        </el-row>-->\n<!--        <el-row>-->\n<!--          <el-col :span=\"12\">-->\n<!--            <el-form-item label=\"水分\" prop=\"nickName\"><el-input v-model=\"recordForm.waterContent\" placeholder=\"请输入水分\" /></el-form-item>-->\n<!--          </el-col>-->\n<!--          <el-col :span=\"12\">-->\n<!--            <el-form-item label=\"光照情况\" prop=\"nickName\"><el-input v-model=\"recordForm.illuminationStatus\" placeholder=\"请输入光照情况\" /></el-form-item>-->\n<!--          </el-col>-->\n<!--        </el-row>-->\n<!--        <el-row>-->\n<!--          <el-col :span=\"12\">-->\n<!--            <el-form-item label=\"备注\" prop=\"nickName\"><el-input v-model=\"recordForm.remarks\" type=\"textarea\" placeholder=\"请输入内容\"></el-input></el-form-item>-->\n<!--          </el-col>-->\n<!--        </el-row>-->\n<!--        <el-row>-->\n<!--          <el-col :span=\"12\">-->\n<!--            <el-form-item label=\"生长图片:\">-->\n<!--              <el-upload class=\"avatar-uploader\" :on-change=\"getFile\" :show-file-list=\"false\" :auto-upload=\"false\">-->\n<!--                <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\" />-->\n<!--                <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>-->\n<!--              </el-upload>-->\n<!--            </el-form-item>-->\n<!--          </el-col>-->\n<!--        </el-row>-->\n<!--      </el-form>-->\n<!--      <div slot=\"footer\" class=\"dialog-footer\">-->\n<!--        <el-button size=\"mini\" type=\"primary\" @click=\"recordCropsGrow\">确 定</el-button>-->\n<!--        <el-button size=\"mini\" @click=\"cancel\">取 消</el-button>-->\n<!--      </div>-->\n<!--    </el-dialog>-->\n\n    <!-- 添加或修改需求对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"700px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"资源名称\" prop=\"nickName\"><el-input v-model=\"form.cropsName\" placeholder=\"请输入需求名称\" /></el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"资源类型\" prop=\"nickName\">\n              <el-select v-model=\"form.cropsType\" placeholder=\"请选择\">\n                <el-option v-for=\"dict in cropsTypeOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\" :value=\"dict.dictValue\"></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"公司名称\" prop=\"nickName\"><el-input v-model=\"form.fertilizerName\" placeholder=\"请输入公司名称\" /></el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"交易方式\" prop=\"nickName\">\n              <el-select v-model=\"form.plantMode\" placeholder=\"请选择\">\n                <el-option v-for=\"dict in plantModeOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\" :value=\"dict.dictValue\"></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"发布时间\" prop=\"nickName\"><el-input v-model=\"form.year\" placeholder=\"请输入发布时间\" /></el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"承运方\" prop=\"nickName\">\n              <el-select v-model=\"form.baggingStatus\" placeholder=\"请选择\">\n                <el-option v-for=\"dict in beggingOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\" :value=\"dict.dictValue\"></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"截止时间\" prop=\"nickName\"><el-input v-model=\"form.growSeedlingsCycle\" placeholder=\"请输入截止时间\" /></el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"生产周期\" prop=\"nickName\"><el-input v-model=\"form.irrigationCycle\" placeholder=\"请输入生产周期\" /></el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"需求数量\" prop=\"nickName\"><el-input v-model=\"form.applyFertilizerCycle\" placeholder=\"请输入需求数量\" /></el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"期望价格\" prop=\"nickName\"><el-input v-model=\"form.weedCycle\" placeholder=\"请输入期望价格\" /></el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"详细地址\" prop=\"nickName\"><el-input v-model=\"form.address\" placeholder=\"请输入详细地址\" /></el-form-item>\n          </el-col>\n        </el-row>\n        <el-form-item label=\"备注\"><el-input v-model=\"form.remarks\" type=\"textarea\" placeholder=\"请输入内容\"></el-input></el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"createCrops\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 需求详情 -->\n    <el-dialog center title=\"需求信息链上数据详情\" :visible.sync=\"cropsDetaiDialog\" width=\"700px\" append-to-body>\n      <el-row>\n        <el-col :span=\"12\">需求ID：{{ cropsDetails.crops_id }}</el-col>\n        <el-col :span=\"12\">资源名称：{{ cropsDetails.crops_name }}</el-col>\n      </el-row>\n      <el-divider></el-divider>\n      <el-row>\n        <el-col :span=\"12\">地址：{{ cropsDetails.address }}</el-col>\n<!--        <el-col :span=\"12\">公司信息：{{ cropsDetails.farmer_name }}</el-col>-->\n      </el-row>\n      <el-divider></el-divider>\n      <el-row>\n        <el-col :span=\"12\">需求数量：{{ cropsDetails.apply_fertilizer_cycle }}</el-col>\n        <el-col :span=\"12\">交易方式：{{ cropsDetails.plant_mode }}</el-col>\n      </el-row>\n      <el-divider></el-divider>\n      <el-row>\n        <el-col :span=\"12\">公司名称：{{ cropsDetails.fertilizer_name }}</el-col>\n        <el-col :span=\"12\">承运方：{{ cropsDetails.bagging_status }}</el-col>\n      </el-row>\n      <el-divider></el-divider>\n      <el-row>\n<!--        <el-col :span=\"12\">联系电话：{{ cropsDetails.farmer_tel }}</el-col>-->\n        <el-col :span=\"12\">发布时间：{{ cropsDetails.year }}</el-col>\n        <el-col :span=\"12\">截止时间：{{ cropsDetails.grow_seedlings_cycle }}</el-col>\n      </el-row>\n      <el-divider></el-divider>\n      <el-row>\n<!--        <el-col :span=\"12\">育苗周期：{{ cropsDetails.grow_seedlings_cycle }}</el-col>-->\n        <el-col :span=\"12\">生产周期：{{ cropsDetails.irrigation_cycle }}</el-col>\n        <el-col :span=\"12\">期望价格：{{ cropsDetails.weed_cycle }}</el-col>\n      </el-row>\n      <el-divider></el-divider>\n      <el-row>\n<!--        <el-col :span=\"12\">期望价格：{{ cropsDetails.weed_cycle }}</el-col>-->\n        <el-col :span=\"12\">上链登记时间：{{ cropsDetails.register_time }}</el-col>\n      </el-row>\n      <el-divider></el-divider>\n      <el-row>\n        <el-col :span=\"12\">备注：{{ cropsDetails.remarks }}</el-col>\n      </el-row>\n    </el-dialog>\n\n    <!-- 过程详情 -->\n<!--    <el-drawer size=\"80%\" :visible.sync=\"cropsProcessDetaiDialog\" :show-close=\"false\" :with-header=\"false\">-->\n<!--      <el-divider content-position=\"left\">农作物链上过程详情</el-divider>-->\n<!--      <el-table v-loading=\"loading\" :data=\"cropsProcessDetailsArray\">-->\n<!--        <el-table-column label=\"过程ID\" prop=\"crops_grow_id\" />-->\n<!--        <el-table-column label=\"作物ID\" prop=\"crops_bak_id\" />-->\n<!--        <el-table-column label=\"生长状态\" prop=\"grow_status\" />-->\n<!--        <el-table-column label=\"光照情况\" prop=\"illumination_status\" />-->\n<!--        <el-table-column label=\"记录时间\" prop=\"record_time\" />-->\n<!--        <el-table-column label=\"温度\" prop=\"temperature\" />-->\n<!--        <el-table-column label=\"水分状态\" prop=\"water_content\" />-->\n<!--        <el-table-column label=\"备注\" prop=\"remarks\" />-->\n<!--        <el-table-column label=\"图片\" class=\"demo-image__preview\">-->\n<!--          <template slot-scope=\"scope\">-->\n<!--            <el-image :preview-src-list=\"scope.row.crops_grow_photo_url\" :src=\"scope.row.crops_grow_photo_url\" style=\"width: 100px;height: 80px\"></el-image>-->\n<!--          </template>-->\n<!--        </el-table-column>-->\n<!--      </el-table>-->\n<!--    </el-drawer>-->\n\n    <el-dialog center title=\"核验需求\" :visible.sync=\"noticeDetaiDialog\" width=\"500px\" append-to-body>\n      <el-form ref=\"form\" :model=\"trasportForm\" label-width=\"80px\">\n        <el-row>\n          <el-col :span=\"24\">\n            <el-form-item label=\"审核人员\" prop=\"nickName\">\n              <el-select v-model=\"trasportForm.userName\" placeholder=\"请选择\">\n                <el-option v-for=\"user in driverList\" :key=\"user.userName\" :label=\"user.nickName\" :value=\"user.userName\"></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"24\">\n            <el-form-item label=\"需求提交\" prop=\"nickName\">\n              <el-select v-model=\"trasportForm.deptId\" placeholder=\"请选择\">\n                <el-option v-for=\"dept in factoryList\" :key=\"dept.deptId\" :label=\"dept.deptName\" :value=\"dept.deptId\"></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"24\">\n            <el-form-item label=\"备注\">\n              <el-input v-model=\"trasportForm.remarks\" type=\"textarea\" placeholder=\"请输入内容\"></el-input>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"addNoticeTrasport\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n    <!--轨迹弹出框-->\n<!--    <el-drawer size=\"80%\" :visible.sync=\"playTrackView\" :show-close=\"false\" :with-header=\"false\">-->\n<!--      <el-divider content-position=\"left\">物流追踪</el-divider>-->\n<!--      &lt;!&ndash; <el-container style=\"height: 600px; border: 1px solid #eee\">-->\n<!--        <el-main>-->\n<!--          <div class=\"map-page\" style=\"height: 100%\"><div id=\"position\"></div></div>-->\n<!--        </el-main>-->\n<!--      </el-container> &ndash;&gt;-->\n<!--      <div id=\"container\" class=\"map\"></div>-->\n<!--    </el-drawer>-->\n  </div>\n</template>\n\n<script>\nimport { listRole, getRole, delRole, addRole, updateRole, exportRole, dataScope, changeRoleStatus } from '@/api/system/role';\nimport { treeselect as menuTreeselect, roleMenuTreeselect } from '@/api/system/menu';\nimport { treeselect as deptTreeselect, roleDeptTreeselect } from '@/api/system/dept';\nimport {getFactoryByDeptId, addTransport, getAllDriverByDeptId, uplodImagesBase64, listCrops, saveCrops } from '../../../api/trace/farmer';\nimport { formatDate } from '../../../utils/index.js';\nexport default {\n  name: 'Role',\n\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 角色表格数据\n      cropsList: [],\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      // 是否显示弹出层（数据权限）\n      openDataScope: false,\n      menuExpand: false,\n      menuNodeAll: false,\n      deptExpand: true,\n      deptNodeAll: false,\n      // 日期范围\n      dateRange: [],\n      // 状态数据字典\n      statusOptions: ['在种', '停种'],\n\n      beggingOptions: [],\n      plantModeOptions: [], //种植方式\n      cropsTypeOptions: [], //作物类型\n\n      growDialog: false, //z作物生长记录弹出框\n      cropsName: '',\n      cropsDetaiDialog: false,\n\n      cropsDetails: '',\n      // 菜单列表\n      menuOptions: [],\n      // 部门列表\n      deptOptions: [],\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        roleName: undefined,\n        roleKey: undefined,\n        status: undefined\n      },\n      // 表单参数\n      form: {},\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      recordForm: {},\n      imageUrl: '',\n      imgBase64: [],\n      cropsPhotoUrl: '',\n      cropsInfo: '',\n      growDialog: false,\n      cropsProcessDetailsArray: [],\n      cropsProcessDetaiDialog: false,\n      noticeDetaiDialog: false,\n      driverList: [],\n      trasportForm: {\n        cropsId: '',\n        farmerUserName: '',\n        farmerNickName: '',\n        time: ''\n      },\n      trasportInfo: '',\n      playTrackView: false,\n      factoryList:[],\n    };\n  },\n  created() {\n    this.getCropsList();\n    this.getDicts('crops_bagging').then(response => {\n      this.beggingOptions = response.data;\n    });\n    this.getDicts('crops_plant_type').then(res => {\n      this.plantModeOptions = res.data;\n    });\n    this.getDicts('crops_type').then(res => {\n      this.cropsTypeOptions = res.data;\n    });\n  },\n  methods: {\n    /**\n     * 物流追踪\n     */\n    logisticsTrace(row) {\n      this.$nextTick(() => {\n        this.playTrackView = true;\n        const lineArr = [\n          [111.315, 23.4955],\n          [110.95752228710936, 23.37433777262006],\n          [109.19833649609373, 23.74883016517126],\n          [109.42355622265623, 24.320753154228328],\n        ];\n        //创建地图\n        var map = new AMap.Map('container', {\n          resizeEnable: true,\n          center: [111.315, 23.4955],\n          zoom: 9\n        });\n        //标记车辆\n        var marker = new AMap.Marker({\n          position: [111.315, 23.4955],\n          icon: 'https://webapi.amap.com/images/car.png',\n          //坐标偏移\n          offset: new AMap.Pixel(-26, -13),\n          autoRotation: true,\n          angle: -90,\n          map: map\n        });\n        // 绘制轨迹路线\n        var polyline = new AMap.Polyline({\n          map: this.map,\n          //这里替换自己的坐标数据\n          path: lineArr,\n          borderWeight: 2, // 线条宽度，默认为 1\n          strokeColor: 'red', // 线条颜色\n          lineJoin: 'round' // 折线拐点连接处样式\n        });\n        map.add(polyline);\n\n        //调用方法开启动画\n        marker.moveAlong(lineArr, 30000);\n      })\n\n    },\n\n    addNoticeTrasport() {\n      this.trasportForm.cropsId = this.trasportInfo.cropsId;\n      this.trasportForm.farmerUserName = this.$store.getters.name;\n      this.trasportForm.farmerNickName = this.$store.getters.nickName;\n      this.trasportForm.time = new Date();\n      this.trasportForm.driverId = this.trasportForm.userName;\n      this.trasportForm.status = 0;\n      this.trasportForm.farmerTel = this.$store.getters.phonenumber;\n      this.trasportForm.farmerDept = this.$store.getters.deptName;\n      this.trasportForm.factoryId = this.trasportForm.deptId\n      addTransport(this.trasportForm)\n        .then(res => {\n          this.msgSuccess('需求已成功提交到资源池');\n          this.noticeDetaiDialog = false;\n          this.getCropsList();\n        })\n        .catch(err => {\n          this.msgError('需求提交失败，发生异常');\n        });\n    },\n\n    /**\n     * @param {Object} row通知运输\n     */\n    noticeTrasport(row) {\n      this.trasportInfo = row;\n      getAllDriverByDeptId(this.$store.getters.deptId)\n        .then(res => {\n          this.driverList = res.data;\n        })\n        .catch(err => {});\n      //获取所有原料厂商\n      getFactoryByDeptId(119)\n        .then(res => {\n          this.factoryList = res.data;\n        })\n        .catch(err => {});\n      this.noticeDetaiDialog = true;\n    },\n\n    /**\n     * 种植过程详情\n     */\n    cropsProcessDetail(row) {\n      this.$httpBlock\n        .get(this.$httpUrl + '/farmerapi/queryCropsProcessByCropsId?id=' + row.cropsId)\n        .then(res => {\n          const array = [];\n\n          for (let i = 0; i < res.data.length; i++) {\n            array.push(res.data[i].Record);\n          }\n          this.cropsProcessDetailsArray = array;\n          this.cropsProcessDetaiDialog = true;\n        })\n        .catch(err => {});\n    },\n\n    recordCropsGrow() {\n      const cropsGrowInfo = this.recordForm;\n      const cropsGrowArray = [];\n      const id = new this.$snowFlakeId().generate();\n      cropsGrowArray.push(id);\n      cropsGrowArray.push(id);\n      cropsGrowArray.push(this.cropsInfo.cropsId);\n      cropsGrowArray.push(formatDate(new Date()));\n      cropsGrowArray.push(this.cropsPhotoUrl);\n      cropsGrowArray.push(cropsGrowInfo.temperature);\n      cropsGrowArray.push(cropsGrowInfo.growStatus);\n      cropsGrowArray.push(cropsGrowInfo.waterContent);\n      cropsGrowArray.push(cropsGrowInfo.illuminationStatus);\n      cropsGrowArray.push(cropsGrowInfo.remarks);\n      this.$httpBlock\n        .post(this.$httpUrl + '/farmerapi/recordCropsGrow', { cropsGrowArray: cropsGrowArray })\n        .then(res => {\n          if (res.status === 200) {\n            this.msgSuccess('数据上链成功');\n            this.growDialog = false;\n          }\n        })\n        .catch(err => {\n          this.msgError('存储异常 ' + err);\n        });\n    },\n\n    getFile(file) {\n      this.imageUrl = URL.createObjectURL(file.raw);\n      this.getBase64(file.raw).then(res => {\n        this.imgBase64 = res;\n        const datas = {\n          imageBase64: this.imgBase64\n        };\n        uplodImagesBase64(datas)\n          .then(res => {\n            this.cropsPhotoUrl = res.msg;\n            this.msgSuccess('图片上传成功');\n          })\n          .catch(err => {\n            this.msgError('图片上传失败');\n          });\n      });\n    },\n\n    getBase64(file) {\n      return new Promise(function(resolve, reject) {\n        const reader = new FileReader();\n        let imgResult = '';\n        reader.readAsDataURL(file);\n        reader.onload = function() {\n          imgResult = reader.result;\n        };\n        reader.onerror = function(error) {\n          reject(error);\n        };\n        reader.onloadend = function() {\n          resolve(imgResult);\n        };\n      });\n    },\n\n    createCrops() {\n      const crops = this.form;\n      const cropsArray = [];\n      cropsArray.push(new this.$snowFlakeId().generate());\n      cropsArray.push(new this.$snowFlakeId().generate());\n      cropsArray.push(this.form.cropsName);\n      cropsArray.push(this.form.address);\n      cropsArray.push(this.$store.getters.nickName);\n      cropsArray.push(this.form.fertilizerName);\n      cropsArray.push(this.form.plantMode);\n      cropsArray.push(this.form.baggingStatus);\n      cropsArray.push(this.form.growSeedlingsCycle);\n      cropsArray.push(this.form.irrigationCycle);\n      cropsArray.push(this.form.applyFertilizerCycle);\n      cropsArray.push(this.form.weedCycle);\n      cropsArray.push(this.form.remarks);\n      cropsArray.push(formatDate(new Date()));\n      cropsArray.push(this.form.year);\n      cropsArray.push(this.$store.getters.phonenumber);\n      this.$httpBlock\n        .post(this.$httpUrl + '/farmerapi/createCrops', { cropsArray: cropsArray })\n        .then(res => {\n          if (res.status === 200) {\n            this.msgSuccess('数据上链成功');\n            const cropsUser = {\n              username: this.$store.getters.name,\n              cropsId: cropsArray[0],\n              cropsName: cropsArray[2],\n              status: 0\n            };\n            saveCrops(cropsUser)\n              .then(res => {\n                this.getCropsList()\n              })\n              .catch(err => {\n                this.msgError('id存储异常 ' + err);\n              });\n            this.getCropsList();\n            this.open = false;\n          }\n        })\n        .catch(err => {\n          this.msgError('存储异常 ' + err);\n        });\n    },\n\n    handleRecord(row) {\n      this.cropsName = row.cropsName;\n      this.cropsInfo = row;\n      this.growDialog = true;\n    },\n\n    /** 查询作物列表 */\n    getCropsList() {\n      this.loading = true;\n      listCrops(this.$store.getters.name).then(response => {\n        this.cropsList = response.data;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n\n    /**\n     * 作物详情\n     */\n    cropsDetail(row) {\n      this.$httpBlock\n        .get(this.$httpUrl + '/farmerapi/queryCropsById?id=' + row.cropsId)\n        .then(res => {\n          this.cropsDetails = res.data;\n          this.cropsDetaiDialog = true;\n        })\n        .catch(err => {});\n    },\n\n    /** 查询菜单树结构 */\n    getMenuTreeselect() {\n      menuTreeselect().then(response => {\n        this.menuOptions = response.data;\n      });\n    },\n    /** 查询部门树结构 */\n    getDeptTreeselect() {\n      deptTreeselect().then(response => {\n        this.deptOptions = response.data;\n      });\n    },\n    // 所有菜单节点数据\n    getMenuAllCheckedKeys() {\n      // 目前被选中的菜单节点\n      let checkedKeys = this.$refs.menu.getHalfCheckedKeys();\n      // 半选中的菜单节点\n      let halfCheckedKeys = this.$refs.menu.getCheckedKeys();\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\n      return checkedKeys;\n    },\n    // 所有部门节点数据\n    getDeptAllCheckedKeys() {\n      // 目前被选中的部门节点\n      let checkedKeys = this.$refs.dept.getHalfCheckedKeys();\n      // 半选中的部门节点\n      let halfCheckedKeys = this.$refs.dept.getCheckedKeys();\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\n      return checkedKeys;\n    },\n    /** 根据角色ID查询菜单树结构 */\n    getRoleMenuTreeselect(roleId) {\n      return roleMenuTreeselect(roleId).then(response => {\n        this.menuOptions = response.menus;\n        return response;\n      });\n    },\n    /** 根据角色ID查询部门树结构 */\n    getRoleDeptTreeselect(roleId) {\n      return roleDeptTreeselect(roleId).then(response => {\n        this.deptOptions = response.depts;\n        return response;\n      });\n    },\n\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 取消按钮（数据权限）\n    cancelDataScope() {\n      this.openDataScope = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      if (this.$refs.menu != undefined) {\n        this.$refs.menu.setCheckedKeys([]);\n      }\n      (this.menuExpand = false),\n        (this.menuNodeAll = false),\n        (this.deptExpand = true),\n        (this.deptNodeAll = false),\n        (this.form = {\n          roleId: undefined,\n          roleName: undefined,\n          roleKey: undefined,\n          roleSort: 0,\n          status: '0',\n          menuIds: [],\n          deptIds: [],\n          menuCheckStrictly: true,\n          deptCheckStrictly: true,\n          remark: undefined\n        });\n      this.resetForm('form');\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = [];\n      this.resetForm('queryForm');\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.roleId);\n      this.single = selection.length != 1;\n      this.multiple = !selection.length;\n    },\n    // 树权限（展开/折叠）\n    handleCheckedTreeExpand(value, type) {\n      if (type == 'menu') {\n        let treeList = this.menuOptions;\n        for (let i = 0; i < treeList.length; i++) {\n          this.$refs.menu.store.nodesMap[treeList[i].id].expanded = value;\n        }\n      } else if (type == 'dept') {\n        let treeList = this.deptOptions;\n        for (let i = 0; i < treeList.length; i++) {\n          this.$refs.dept.store.nodesMap[treeList[i].id].expanded = value;\n        }\n      }\n    },\n    // 树权限（全选/全不选）\n    handleCheckedTreeNodeAll(value, type) {\n      if (type == 'menu') {\n        this.$refs.menu.setCheckedNodes(value ? this.menuOptions : []);\n      } else if (type == 'dept') {\n        this.$refs.dept.setCheckedNodes(value ? this.deptOptions : []);\n      }\n    },\n    // 树权限（父子联动）\n    handleCheckedTreeConnect(value, type) {\n      if (type == 'menu') {\n        this.form.menuCheckStrictly = value ? true : false;\n      } else if (type == 'dept') {\n        this.form.deptCheckStrictly = value ? true : false;\n      }\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.getMenuTreeselect();\n      this.open = true;\n      this.title = '需求详情';\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const roleId = row.roleId || this.ids;\n      const roleMenu = this.getRoleMenuTreeselect(roleId);\n      getRole(roleId).then(response => {\n        this.form = response.data;\n        this.open = true;\n        this.$nextTick(() => {\n          roleMenu.then(res => {\n            this.$refs.menu.setCheckedKeys(res.checkedKeys);\n          });\n        });\n        this.title = '修改作物';\n      });\n    },\n    /** 分配数据权限操作 */\n    handleDataScope(row) {\n      this.reset();\n      const roleDeptTreeselect = this.getRoleDeptTreeselect(row.roleId);\n      getRole(row.roleId).then(response => {\n        this.form = response.data;\n        this.openDataScope = true;\n        this.$nextTick(() => {\n          roleDeptTreeselect.then(res => {\n            this.$refs.dept.setCheckedKeys(res.checkedKeys);\n          });\n        });\n        this.title = '分配数据权限';\n      });\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      // this.$refs[\"form\"].validate(valid => {\n      //     if (valid) {\n      saveCrops(this.form).then(res => {\n        if (res.code === 200) {\n          this.msgSuccess('修改成功');\n          this.open = false;\n        }\n      });\n      // if (this.form.roleId != undefined) {\n      //     this.form.menuIds = this.getMenuAllCheckedKeys();\n      //     updateRole(this.form).then(response => {\n      //         if (response.code === 200) {\n      //             this.msgSuccess(\"修改成功\");\n      //             this.open = false;\n      //             this.getList();\n      //         }\n      //     });\n      // } else {\n      //     this.form.menuIds = this.getMenuAllCheckedKeys();\n      //     addRole(this.form).then(response => {\n      //         if (response.code === 200) {\n      //             this.msgSuccess(\"新增成功\");\n      //             this.open = false;\n      //             this.getList();\n      //         }\n      //     });\n      // }\n      //     }\n      // });\n    },\n    /** 提交按钮（数据权限） */\n    submitDataScope: function() {\n      if (this.form.roleId != undefined) {\n        this.form.deptIds = this.getDeptAllCheckedKeys();\n        dataScope(this.form).then(response => {\n          if (response.code === 200) {\n            this.msgSuccess('修改成功');\n            this.openDataScope = false;\n            this.getList();\n          }\n        });\n      }\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const roleIds = row.roleId || this.ids;\n      this.$confirm('是否确认删除角色编号为\"' + roleIds + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(function() {\n          return delRole(roleIds);\n        })\n        .then(() => {\n          this.getList();\n          this.msgSuccess('删除成功');\n        })\n        .catch(function() {});\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      const queryParams = this.queryParams;\n      this.$confirm('是否确认导出所有角色数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(function() {\n          return exportRole(queryParams);\n        })\n        .then(response => {\n          this.download(response.msg);\n        })\n        .catch(function() {});\n    }\n  }\n};\n</script>\n<style>\n.avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409eff;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n}\n.avatar {\n  width: 178px;\n  height: 178px;\n  display: block;\n}\n\n.image {\n  width: 80%;\n  display: block;\n}\n/**一定要给宽高，否则不显示*/\n#position {\n  height: 100%;\n}\n/**修改点标记图片的css, 图片给宽高，否则不显示 */\n.map-page /deep/ {\n.amap-icon {\n  width: 20px;\n}\n.amap-marker-label {\n  border: 1px solid #ccc;\n  font-size: 16px;\n  display: inline-block;\n  padding: 5px;\n}\n}\n\n#panel {\n  position: fixed;\n  background-color: white;\n  max-height: 90%;\n  overflow-y: auto;\n  top: 10px;\n  right: 10px;\n  width: 280px;\n}\n#panel .amap-call {\n  background-color: #009cf9;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n}\n#panel .amap-lib-driving {\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  overflow: hidden;\n}\nhtml,\nbody,\n#container {\n  width: 100%;\n  height: 100%;\n}\n\n.map {\n  width: 100%;\n  height: 500px;\n}\n</style>\n"]}]}