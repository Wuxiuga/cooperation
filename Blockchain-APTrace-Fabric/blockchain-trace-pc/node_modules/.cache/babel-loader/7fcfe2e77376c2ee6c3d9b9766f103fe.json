{"remainingRequest":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/babel-loader/lib/index.js!/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/src/components/Breadcrumb/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/src/components/Breadcrumb/index.vue","mtime":1645620179141},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/babel.config.js","mtime":1645620179122},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/cache-loader/dist/cjs.js","mtime":1645761092000},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/babel-loader/lib/index.js","mtime":1645761092000},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/cache-loader/dist/cjs.js","mtime":1645761092000},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/vue-loader/lib/index.js","mtime":1645761092000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvbGliYW9qaWFuL0Rlc2t0b3AvQmxvY2tjaGFpbi1BUFRyYWNlLUZhYnJpYy9ibG9ja2NoYWluLXRyYWNlLXBjL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3RhcnRzLXdpdGguanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltLmpzIik7Cgp2YXIgX3BhdGhUb1JlZ2V4cCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgicGF0aC10by1yZWdleHAiKSk7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgX2RlZmF1bHQgPSB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxldmVsTGlzdDogbnVsbAogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICAkcm91dGU6IGZ1bmN0aW9uICRyb3V0ZShyb3V0ZSkgewogICAgICAvLyBpZiB5b3UgZ28gdG8gdGhlIHJlZGlyZWN0IHBhZ2UsIGRvIG5vdCB1cGRhdGUgdGhlIGJyZWFkY3J1bWJzCiAgICAgIGlmIChyb3V0ZS5wYXRoLnN0YXJ0c1dpdGgoJy9yZWRpcmVjdC8nKSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5nZXRCcmVhZGNydW1iKCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRCcmVhZGNydW1iKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRCcmVhZGNydW1iOiBmdW5jdGlvbiBnZXRCcmVhZGNydW1iKCkgewogICAgICAvLyBvbmx5IHNob3cgcm91dGVzIHdpdGggbWV0YS50aXRsZQogICAgICB2YXIgbWF0Y2hlZCA9IHRoaXMuJHJvdXRlLm1hdGNoZWQuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0ubWV0YSAmJiBpdGVtLm1ldGEudGl0bGU7CiAgICAgIH0pOwogICAgICB2YXIgZmlyc3QgPSBtYXRjaGVkWzBdOwoKICAgICAgaWYgKCF0aGlzLmlzRGFzaGJvYXJkKGZpcnN0KSkgewogICAgICAgIG1hdGNoZWQgPSBbewogICAgICAgICAgcGF0aDogJy9pbmRleCcsCiAgICAgICAgICBtZXRhOiB7CiAgICAgICAgICAgIHRpdGxlOiAn6aaW6aG1JwogICAgICAgICAgfQogICAgICAgIH1dLmNvbmNhdChtYXRjaGVkKTsKICAgICAgfQoKICAgICAgdGhpcy5sZXZlbExpc3QgPSBtYXRjaGVkLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLm1ldGEgJiYgaXRlbS5tZXRhLnRpdGxlICYmIGl0ZW0ubWV0YS5icmVhZGNydW1iICE9PSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgaXNEYXNoYm9hcmQ6IGZ1bmN0aW9uIGlzRGFzaGJvYXJkKHJvdXRlKSB7CiAgICAgIHZhciBuYW1lID0gcm91dGUgJiYgcm91dGUubmFtZTsKCiAgICAgIGlmICghbmFtZSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgcmV0dXJuIG5hbWUudHJpbSgpID09PSAn6aaW6aG1JzsKICAgIH0sCiAgICBwYXRoQ29tcGlsZTogZnVuY3Rpb24gcGF0aENvbXBpbGUocGF0aCkgewogICAgICB2YXIgcGFyYW1zID0gdGhpcy4kcm91dGUucGFyYW1zOwoKICAgICAgdmFyIHRvUGF0aCA9IF9wYXRoVG9SZWdleHAuZGVmYXVsdC5jb21waWxlKHBhdGgpOwoKICAgICAgcmV0dXJuIHRvUGF0aChwYXJhbXMpOwogICAgfSwKICAgIGhhbmRsZUxpbms6IGZ1bmN0aW9uIGhhbmRsZUxpbmsoaXRlbSkgewogICAgICB2YXIgcmVkaXJlY3QgPSBpdGVtLnJlZGlyZWN0LAogICAgICAgICAgcGF0aCA9IGl0ZW0ucGF0aDsKCiAgICAgIGlmIChyZWRpcmVjdCkgewogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHJlZGlyZWN0KTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHRoaXMucGF0aENvbXBpbGUocGF0aCkpOwogICAgfQogIH0KfTsKZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAYA;;;;;;;;;;;;;eAEA;AACAA,MADA,kBACA;AACA;AACAC;AADA;AAGA,GALA;AAMAC;AACAC,UADA,kBACAC,KADA,EACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAPA,GANA;AAeAC,SAfA,qBAeA;AACA;AACA,GAjBA;AAkBAC;AACAC,iBADA,2BACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACAC;AAAAC;AAAAC;AAAAC;AAAA;AAAA;AACA;;AAEA;AAAA;AAAA;AACA,KAXA;AAYAC,eAZA,uBAYAR,KAZA,EAYA;AACA;;AACA;AACA;AACA;;AACA;AACA,KAlBA;AAmBAS,eAnBA,uBAmBAJ,IAnBA,EAmBA;AACA;;AACA;;AACA;AACA,KAvBA;AAwBAK,cAxBA,sBAwBAC,IAxBA,EAwBA;AACA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AACA;AA/BA;AAlBA,C","names":["data","levelList","watch","$route","route","created","methods","getBreadcrumb","matched","path","meta","title","isDashboard","pathCompile","handleLink","item"],"sourceRoot":"src/components/Breadcrumb","sources":["index.vue"],"sourcesContent":["<template>\n  <el-breadcrumb class=\"app-breadcrumb\" separator=\"/\">\n    <transition-group name=\"breadcrumb\">\n      <el-breadcrumb-item v-for=\"(item,index) in levelList\" :key=\"item.path\">\n        <span v-if=\"item.redirect==='noRedirect'||index==levelList.length-1\" class=\"no-redirect\">{{ item.meta.title }}</span>\n        <a v-else @click.prevent=\"handleLink(item)\">{{ item.meta.title }}</a>\n      </el-breadcrumb-item>\n    </transition-group>\n  </el-breadcrumb>\n</template>\n\n<script>\nimport pathToRegexp from 'path-to-regexp'\n\nexport default {\n  data() {\n    return {\n      levelList: null\n    }\n  },\n  watch: {\n    $route(route) {\n      // if you go to the redirect page, do not update the breadcrumbs\n      if (route.path.startsWith('/redirect/')) {\n        return\n      }\n      this.getBreadcrumb()\n    }\n  },\n  created() {\n    this.getBreadcrumb()\n  },\n  methods: {\n    getBreadcrumb() {\n      // only show routes with meta.title\n      let matched = this.$route.matched.filter(item => item.meta && item.meta.title)\n      const first = matched[0]\n\n      if (!this.isDashboard(first)) {\n        matched = [{ path: '/index', meta: { title: '扶뒬못' }}].concat(matched)\n      }\n\n      this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false)\n    },\n    isDashboard(route) {\n      const name = route && route.name\n      if (!name) {\n        return false\n      }\n      return name.trim() === '扶뒬못'\n    },\n    pathCompile(path) {\n      const { params } = this.$route\n      var toPath = pathToRegexp.compile(path)\n      return toPath(params)\n    },\n    handleLink(item) {\n      const { redirect, path } = item\n      if (redirect) {\n        this.$router.push(redirect)\n        return\n      }\n      this.$router.push(this.pathCompile(path))\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.app-breadcrumb.el-breadcrumb {\n  display: inline-block;\n  font-size: 14px;\n  line-height: 50px;\n  margin-left: 8px;\n\n  .no-redirect {\n    color: #97a8be;\n    cursor: text;\n  }\n}\n</style>\n"]}]}