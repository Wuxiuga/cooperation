{"remainingRequest":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/babel-loader/lib/index.js!/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/src/views/system/role/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/src/views/system/role/index.vue","mtime":1645620179153},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/babel.config.js","mtime":1645620179122},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/cache-loader/dist/cjs.js","mtime":1645761092000},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/babel-loader/lib/index.js","mtime":1645761092000},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/cache-loader/dist/cjs.js","mtime":1645761092000},{"path":"/Users/libaojian/Desktop/Blockchain-APTrace-Fabric/blockchain-trace-pc/node_modules/vue-loader/lib/index.js","mtime":1645761092000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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D,KA1HA,EA0HAiC,IA1HA,EA0HA;AACA;AACA;;AACA;AACA;AACA;AACA,OALA,MAKA;AACA;;AACA;AACA;AACA;AACA;AACA,KAtIA;AAuIA;AACAgB,4BAxIA,oCAwIAjD,KAxIA,EAwIAiC,IAxIA,EAwIA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KA9IA;AA+IA;AACAiB,4BAhJA,oCAgJAlD,KAhJA,EAgJAiC,IAhJA,EAgJA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAtJA;;AAuJA;AACAkB,aAxJA,uBAwJA;AACA;AACA;AACA;AACA;AACA,KA7JA;;AA8JA;AACAC,gBA/JA,wBA+JAtB,GA/JA,EA+JA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACAuB;AACA;AACA,WAFA;AAGA,SAJA;;AAKA;AACA,OATA;AAUA,KA7KA;;AA8KA;AACAC,mBA/KA,2BA+KAxB,GA/KA,EA+KA;AAAA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACAyB;AACA;AACA,WAFA;AAGA,SAJA;;AAKA;AACA,OATA;AAUA,KA5LA;;AA6LA;AACAC;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA,aANA;AAOA,WATA,MASA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA,aANA;AAOA;AACA;AACA,OAtBA;AAuBA,KAtNA;;AAuNA;AACAC;AAAA;;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA,SANA;AAOA;AACA,KAnOA;;AAoOA;AACAC,gBArOA,wBAqOA5B,GArOA,EAqOA;AAAA;;AACA;AACA;AACAC,+BADA;AAEAC,8BAFA;AAGAC;AAHA,SAIAC,IAJA,CAIA;AACA;AACA,OANA,EAMAA,IANA,CAMA;AACA;;AACA;AACA,OATA,EASAC,KATA,CASA,cATA;AAUA,KAjPA;;AAkPA;AACAwB,gBAnPA,0BAmPA;AAAA;;AACA;AACA;AACA5B,+BADA;AAEAC,8BAFA;AAGAC;AAHA,SAIAC,IAJA,CAIA;AACA;AACA,OANA,EAMAA,IANA,CAMA;AACA;AACA,OARA,EAQAC,KARA,CAQA,cARA;AASA;AA9PA;AA7FA,C","names":["name","data","loading","ids","single","multiple","showSearch","total","roleList","title","open","openDataScope","menuExpand","menuNodeAll","deptExpand","deptNodeAll","dateRange","statusOptions","dataScopeOptions","value","label","menuOptions","deptOptions","queryParams","pageNum","pageSize","roleName","roleKey","status","form","defaultProps","children","rules","required","message","trigger","roleSort","created","methods","getList","getMenuTreeselect","getDeptTreeselect","getMenuAllCheckedKeys","checkedKeys","getDeptAllCheckedKeys","getRoleMenuTreeselect","roleId","getRoleDeptTreeselect","handleStatusChange","row","confirmButtonText","cancelButtonText","type","then","catch","cancel","cancelDataScope","reset","menuIds","deptIds","menuCheckStrictly","deptCheckStrictly","remark","handleQuery","resetQuery","handleSelectionChange","selection","handleCheckedTreeExpand","handleCheckedTreeNodeAll","handleCheckedTreeConnect","handleAdd","handleUpdate","roleMenu","handleDataScope","roleDeptTreeselect","submitForm","submitDataScope","handleDelete","handleExport"],"sourceRoot":"src/views/system/role","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"queryParams\" ref=\"queryForm\" v-show=\"showSearch\" :inline=\"true\">\n      <el-form-item label=\"角色名称\" prop=\"roleName\">\n        <el-input\n          v-model=\"queryParams.roleName\"\n          placeholder=\"请输入角色名称\"\n          clearable\n          size=\"small\"\n          style=\"width: 240px\"\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"权限字符\" prop=\"roleKey\">\n        <el-input\n          v-model=\"queryParams.roleKey\"\n          placeholder=\"请输入权限字符\"\n          clearable\n          size=\"small\"\n          style=\"width: 240px\"\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"状态\" prop=\"status\">\n        <el-select\n          v-model=\"queryParams.status\"\n          placeholder=\"角色状态\"\n          clearable\n          size=\"small\"\n          style=\"width: 240px\"\n        >\n          <el-option\n            v-for=\"dict in statusOptions\"\n            :key=\"dict.dictValue\"\n            :label=\"dict.dictLabel\"\n            :value=\"dict.dictValue\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"创建时间\">\n        <el-date-picker\n          v-model=\"dateRange\"\n          size=\"small\"\n          style=\"width: 240px\"\n          value-format=\"yyyy-MM-dd\"\n          type=\"daterange\"\n          range-separator=\"-\"\n          start-placeholder=\"开始日期\"\n          end-placeholder=\"结束日期\"\n        ></el-date-picker>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"cyan\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleAdd\"\n          v-hasPermi=\"['system:role:add']\"\n        >新增</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"success\"\n          icon=\"el-icon-edit\"\n          size=\"mini\"\n          :disabled=\"single\"\n          @click=\"handleUpdate\"\n          v-hasPermi=\"['system:role:edit']\"\n        >修改</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"danger\"\n          icon=\"el-icon-delete\"\n          size=\"mini\"\n          :disabled=\"multiple\"\n          @click=\"handleDelete\"\n          v-hasPermi=\"['system:role:remove']\"\n        >删除</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"warning\"\n          icon=\"el-icon-download\"\n          size=\"mini\"\n          @click=\"handleExport\"\n          v-hasPermi=\"['system:role:export']\"\n        >导出</el-button>\n      </el-col>\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n    </el-row>\n\n    <el-table v-loading=\"loading\" :data=\"roleList\" @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column label=\"角色编号\" prop=\"roleId\" width=\"120\" />\n      <el-table-column label=\"角色名称\" prop=\"roleName\" :show-overflow-tooltip=\"true\" width=\"150\" />\n      <el-table-column label=\"权限字符\" prop=\"roleKey\" :show-overflow-tooltip=\"true\" width=\"150\" />\n      <el-table-column label=\"显示顺序\" prop=\"roleSort\" width=\"100\" />\n      <el-table-column label=\"状态\" align=\"center\" width=\"100\">\n        <template slot-scope=\"scope\">\n          <el-switch\n            v-model=\"scope.row.status\"\n            active-value=\"0\"\n            inactive-value=\"1\"\n            @change=\"handleStatusChange(scope.row)\"\n          ></el-switch>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <span>{{ parseTime(scope.row.createTime) }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-edit\"\n            @click=\"handleUpdate(scope.row)\"\n            v-hasPermi=\"['system:role:edit']\"\n          >修改</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-circle-check\"\n            @click=\"handleDataScope(scope.row)\"\n            v-hasPermi=\"['system:role:edit']\"\n          >数据权限</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-delete\"\n            @click=\"handleDelete(scope.row)\"\n            v-hasPermi=\"['system:role:remove']\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 添加或修改角色配置对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"form.roleName\" placeholder=\"请输入角色名称\" />\n        </el-form-item>\n        <el-form-item label=\"权限字符\" prop=\"roleKey\">\n          <el-input v-model=\"form.roleKey\" placeholder=\"请输入权限字符\" />\n        </el-form-item>\n        <el-form-item label=\"角色顺序\" prop=\"roleSort\">\n          <el-input-number v-model=\"form.roleSort\" controls-position=\"right\" :min=\"0\" />\n        </el-form-item>\n        <el-form-item label=\"状态\">\n          <el-radio-group v-model=\"form.status\">\n            <el-radio\n              v-for=\"dict in statusOptions\"\n              :key=\"dict.dictValue\"\n              :label=\"dict.dictValue\"\n            >{{dict.dictLabel}}</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"菜单权限\">\n          <el-checkbox v-model=\"menuExpand\" @change=\"handleCheckedTreeExpand($event, 'menu')\">展开/折叠</el-checkbox>\n          <el-checkbox v-model=\"menuNodeAll\" @change=\"handleCheckedTreeNodeAll($event, 'menu')\">全选/全不选</el-checkbox>\n          <el-checkbox v-model=\"form.menuCheckStrictly\" @change=\"handleCheckedTreeConnect($event, 'menu')\">父子联动</el-checkbox>\n          <el-tree\n            class=\"tree-border\"\n            :data=\"menuOptions\"\n            show-checkbox\n            ref=\"menu\"\n            node-key=\"id\"\n            :check-strictly=\"!form.menuCheckStrictly\"\n            empty-text=\"加载中，请稍后\"\n            :props=\"defaultProps\"\n          ></el-tree>\n        </el-form-item>\n        <el-form-item label=\"备注\">\n          <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 分配角色数据权限对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"openDataScope\" width=\"500px\" append-to-body>\n      <el-form :model=\"form\" label-width=\"80px\">\n        <el-form-item label=\"角色名称\">\n          <el-input v-model=\"form.roleName\" :disabled=\"true\" />\n        </el-form-item>\n        <el-form-item label=\"权限字符\">\n          <el-input v-model=\"form.roleKey\" :disabled=\"true\" />\n        </el-form-item>\n        <el-form-item label=\"权限范围\">\n          <el-select v-model=\"form.dataScope\">\n            <el-option\n              v-for=\"item in dataScopeOptions\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"数据权限\" v-show=\"form.dataScope == 2\">\n          <el-checkbox v-model=\"deptExpand\" @change=\"handleCheckedTreeExpand($event, 'dept')\">展开/折叠</el-checkbox>\n          <el-checkbox v-model=\"deptNodeAll\" @change=\"handleCheckedTreeNodeAll($event, 'dept')\">全选/全不选</el-checkbox>\n          <el-checkbox v-model=\"form.deptCheckStrictly\" @change=\"handleCheckedTreeConnect($event, 'dept')\">父子联动</el-checkbox>\n          <el-tree\n            class=\"tree-border\"\n            :data=\"deptOptions\"\n            show-checkbox\n            default-expand-all\n            ref=\"dept\"\n            node-key=\"id\"\n            :check-strictly=\"!form.deptCheckStrictly\"\n            empty-text=\"加载中，请稍后\"\n            :props=\"defaultProps\"\n          ></el-tree>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitDataScope\">确 定</el-button>\n        <el-button @click=\"cancelDataScope\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { listRole, getRole, delRole, addRole, updateRole, exportRole, dataScope, changeRoleStatus } from \"@/api/system/role\";\nimport { treeselect as menuTreeselect, roleMenuTreeselect } from \"@/api/system/menu\";\nimport { treeselect as deptTreeselect, roleDeptTreeselect } from \"@/api/system/dept\";\n\nexport default {\n  name: \"Role\",\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 角色表格数据\n      roleList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 是否显示弹出层（数据权限）\n      openDataScope: false,\n      menuExpand: false,\n      menuNodeAll: false,\n      deptExpand: true,\n      deptNodeAll: false,\n      // 日期范围\n      dateRange: [],\n      // 状态数据字典\n      statusOptions: [],\n      // 数据范围选项\n      dataScopeOptions: [\n        {\n          value: \"1\",\n          label: \"全部数据权限\"\n        },\n        {\n          value: \"2\",\n          label: \"自定数据权限\"\n        },\n        {\n          value: \"3\",\n          label: \"本部门数据权限\"\n        },\n        {\n          value: \"4\",\n          label: \"本部门及以下数据权限\"\n        },\n        {\n          value: \"5\",\n          label: \"仅本人数据权限\"\n        }\n      ],\n      // 菜单列表\n      menuOptions: [],\n      // 部门列表\n      deptOptions: [],\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        roleName: undefined,\n        roleKey: undefined,\n        status: undefined\n      },\n      // 表单参数\n      form: {},\n      defaultProps: {\n        children: \"children\",\n        label: \"label\"\n      },\n      // 表单校验\n      rules: {\n        roleName: [\n          { required: true, message: \"角色名称不能为空\", trigger: \"blur\" }\n        ],\n        roleKey: [\n          { required: true, message: \"权限字符不能为空\", trigger: \"blur\" }\n        ],\n        roleSort: [\n          { required: true, message: \"角色顺序不能为空\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  created() {\n    this.getList();\n    this.getDicts(\"sys_normal_disable\").then(response => {\n      this.statusOptions = response.data;\n    });\n  },\n  methods: {\n    /** 查询角色列表 */\n    getList() {\n      this.loading = true;\n      listRole(this.addDateRange(this.queryParams, this.dateRange)).then(\n        response => {\n          this.roleList = response.rows;\n          this.total = response.total;\n          this.loading = false;\n        }\n      );\n    },\n    /** 查询菜单树结构 */\n    getMenuTreeselect() {\n      menuTreeselect().then(response => {\n        this.menuOptions = response.data;\n      });\n    },\n    /** 查询部门树结构 */\n    getDeptTreeselect() {\n      deptTreeselect().then(response => {\n        this.deptOptions = response.data;\n      });\n    },\n    // 所有菜单节点数据\n    getMenuAllCheckedKeys() {\n      // 目前被选中的菜单节点\n      let checkedKeys = this.$refs.menu.getHalfCheckedKeys();\n      // 半选中的菜单节点\n      let halfCheckedKeys = this.$refs.menu.getCheckedKeys();\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\n      return checkedKeys;\n    },\n    // 所有部门节点数据\n    getDeptAllCheckedKeys() {\n      // 目前被选中的部门节点\n      let checkedKeys = this.$refs.dept.getHalfCheckedKeys();\n      // 半选中的部门节点\n      let halfCheckedKeys = this.$refs.dept.getCheckedKeys();\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\n      return checkedKeys;\n    },\n    /** 根据角色ID查询菜单树结构 */\n    getRoleMenuTreeselect(roleId) {\n      return roleMenuTreeselect(roleId).then(response => {\n        this.menuOptions = response.menus;\n        return response;\n      });\n    },\n    /** 根据角色ID查询部门树结构 */\n    getRoleDeptTreeselect(roleId) {\n      return roleDeptTreeselect(roleId).then(response => {\n        this.deptOptions = response.depts;\n        return response;\n      });\n    },\n    // 角色状态修改\n    handleStatusChange(row) {\n      let text = row.status === \"0\" ? \"启用\" : \"停用\";\n      this.$confirm('确认要\"' + text + '\"\"' + row.roleName + '\"角色吗?', \"警告\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function() {\n          return changeRoleStatus(row.roleId, row.status);\n        }).then(() => {\n          this.msgSuccess(text + \"成功\");\n        }).catch(function() {\n          row.status = row.status === \"0\" ? \"1\" : \"0\";\n        });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 取消按钮（数据权限）\n    cancelDataScope() {\n      this.openDataScope = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      if (this.$refs.menu != undefined) {\n        this.$refs.menu.setCheckedKeys([]);\n      }\n      this.menuExpand = false,\n      this.menuNodeAll = false,\n      this.deptExpand = true,\n      this.deptNodeAll = false,\n      this.form = {\n        roleId: undefined,\n        roleName: undefined,\n        roleKey: undefined,\n        roleSort: 0,\n        status: \"0\",\n        menuIds: [],\n        deptIds: [],\n        menuCheckStrictly: true,\n\t\tdeptCheckStrictly: true,\n        remark: undefined\n      };\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = [];\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.roleId)\n      this.single = selection.length!=1\n      this.multiple = !selection.length\n    },\n    // 树权限（展开/折叠）\n    handleCheckedTreeExpand(value, type) {\n      if (type == 'menu') {\n        let treeList = this.menuOptions;\n        for (let i = 0; i < treeList.length; i++) {\n          this.$refs.menu.store.nodesMap[treeList[i].id].expanded = value;\n        }\n      } else if (type == 'dept') {\n        let treeList = this.deptOptions;\n        for (let i = 0; i < treeList.length; i++) {\n          this.$refs.dept.store.nodesMap[treeList[i].id].expanded = value;\n        }\n      }\n    },\n    // 树权限（全选/全不选）\n    handleCheckedTreeNodeAll(value, type) {\n      if (type == 'menu') {\n        this.$refs.menu.setCheckedNodes(value ? this.menuOptions: []);\n      } else if (type == 'dept') {\n        this.$refs.dept.setCheckedNodes(value ? this.deptOptions: []);\n      }\n    },\n    // 树权限（父子联动）\n    handleCheckedTreeConnect(value, type) {\n      if (type == 'menu') {\n        this.form.menuCheckStrictly = value ? true: false;\n      } else if (type == 'dept') {\n        this.form.deptCheckStrictly = value ? true: false;\n      }\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.getMenuTreeselect();\n      this.open = true;\n      this.title = \"添加角色\";\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const roleId = row.roleId || this.ids\n      const roleMenu = this.getRoleMenuTreeselect(roleId);\n      getRole(roleId).then(response => {\n        this.form = response.data;\n        this.open = true;\n        this.$nextTick(() => {\n          roleMenu.then(res => {\n            this.$refs.menu.setCheckedKeys(res.checkedKeys);\n          });\n        });\n        this.title = \"修改角色\";\n      });\n    },\n    /** 分配数据权限操作 */\n    handleDataScope(row) {\n      this.reset();\n      const roleDeptTreeselect = this.getRoleDeptTreeselect(row.roleId);\n      getRole(row.roleId).then(response => {\n        this.form = response.data;\n        this.openDataScope = true;\n        this.$nextTick(() => {\n          roleDeptTreeselect.then(res => {\n            this.$refs.dept.setCheckedKeys(res.checkedKeys);\n          });\n        });\n        this.title = \"分配数据权限\";\n      });\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.roleId != undefined) {\n            this.form.menuIds = this.getMenuAllCheckedKeys();\n            updateRole(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess(\"修改成功\");\n                this.open = false;\n                this.getList();\n              }\n            });\n          } else {\n            this.form.menuIds = this.getMenuAllCheckedKeys();\n            addRole(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess(\"新增成功\");\n                this.open = false;\n                this.getList();\n              }\n            });\n          }\n        }\n      });\n    },\n    /** 提交按钮（数据权限） */\n    submitDataScope: function() {\n      if (this.form.roleId != undefined) {\n        this.form.deptIds = this.getDeptAllCheckedKeys();\n        dataScope(this.form).then(response => {\n          if (response.code === 200) {\n            this.msgSuccess(\"修改成功\");\n            this.openDataScope = false;\n            this.getList();\n          }\n        });\n      }\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const roleIds = row.roleId || this.ids;\n      this.$confirm('是否确认删除角色编号为\"' + roleIds + '\"的数据项?', \"警告\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function() {\n          return delRole(roleIds);\n        }).then(() => {\n          this.getList();\n          this.msgSuccess(\"删除成功\");\n        }).catch(function() {});\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      const queryParams = this.queryParams;\n      this.$confirm('是否确认导出所有角色数据项?', \"警告\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function() {\n          return exportRole(queryParams);\n        }).then(response => {\n          this.download(response.msg);\n        }).catch(function() {});\n    }\n  }\n};\n</script>"]}]}